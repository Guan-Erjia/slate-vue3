name: publish package
on:
  push:
    branches:
      - master
permissions: write-all
jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 配置 Node 环境
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org/"
          node-version: "latest"

      - name: 安装 PNPM
        run: npm i -g pnpm

      - name: 安装依赖
        run: pnpm install --no-frozen-lockfile

      - name: 开始单元测试
        run: pnpm test run

      - name: 缓存 playwright 版本号
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: 缓存 playwright 浏览器
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{env.PLAYWRIGHT_VERSION}}

      - name: 准备集成测试环境
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: pnpm playwright install --with-deps

      - name: 开始集成测试
        run: pnpm e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: 开始打包
        run: pnpm build-all

      - name: 发布npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: 读取版本号
        uses: tyankatsu0105/read-package-version-actions@v1
        id: package-version

      - name: 创建 GitHub 发布
        id: release_tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release v_${{ steps.package-version.outputs.version }}
          release_name: release v_${{ steps.package-version.outputs.version }}
          prerelease: false
