diff --git a/dist/index.es.js b/dist/index.es.js
index 420306046eec6319b40943ba7aa9a5c24725cf58..d086599879015377990299007ee562908e49b337 100644
--- a/dist/index.es.js
+++ b/dist/index.es.js
@@ -636,14 +636,12 @@ var applyToDraft = (editor, selection, op) => {
 // eslint-disable-next-line no-redeclare
 var GeneralTransforms = {
   transform(editor, op) {
-    editor.children = createDraft(editor.children);
-    var selection = editor.selection && createDraft(editor.selection);
+    var selection = editor.selection
     try {
       selection = applyToDraft(editor, selection, op);
     } finally {
-      editor.children = finishDraft(editor.children);
       if (selection) {
-        editor.selection = isDraft(selection) ? finishDraft(selection) : selection;
+        editor.selection = selection;
       } else {
         editor.selection = null;
       }
@@ -873,7 +871,7 @@ var Range = {
   },
   transform(range, op) {
     var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
-    return produce(range, r => {
+    return (r => {
       if (r === null) {
         return null;
       }
@@ -917,7 +915,7 @@ var Range = {
       }
       r.anchor = anchor;
       r.focus = focus;
-    });
+    })(range);
   }
 };
 
@@ -1067,9 +1065,7 @@ var Node = {
     if (Text.isText(root)) {
       throw new Error("Cannot get a fragment starting from a root text node: ".concat(Scrubber.stringify(root)));
     }
-    var newRoot = produce({
-      children: root.children
-    }, r => {
+    var newRoot = (r => {
       var [start, end] = Range.edges(range);
       var nodeEntries = Node.nodes(r, {
         reverse: true,
@@ -1096,6 +1092,8 @@ var Node = {
       if (Editor.isEditor(r)) {
         r.selection = null;
       }
+    })({
+      children: root.children
     });
     return newRoot.children;
   },
@@ -1662,7 +1660,7 @@ var Point = {
   },
   transform(point, op) {
     var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
-    return produce(point, p => {
+    return (p => {
       if (p === null) {
         return null;
       }
@@ -1727,7 +1725,7 @@ var Point = {
             break;
           }
       }
-    });
+    })(point);
   }
 };
 
